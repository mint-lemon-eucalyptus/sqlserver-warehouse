tinymce.PluginManager.add("cypher", function (t) {
    t.addButton("cypher", {text: "CYPHER", icon: !1, onclick: function () {
        if (!t.$cypher) {
            var ang_scope = angular.element(document.getElementById('material-edit')).scope();
            t.$cypher = {res: {mat_id: ang_scope.data.id}, lang: ang_scope.data.lang};
            t.$cypher.res.type = 'neo4j'
            $.post("/datasets/listWithUser", t.$cypher.res, function (data) {
                if (data.err) {
                    alert('Datasets loading: Warning', JSON.stringify(data.err, null, 2));
                } else {
                    t.$cypher.datasets = [];
                    data.response.map(function (ad) {
                        t.$cypher.datasets.push({text: ad.name, value: ad.id});
                    });
                    t.$cypher.res.dataset = data.response[0].id;
                    f();
                }
            });
        } else {
            f();
        }

        function f() {
            t.windowManager.open({title: "CYPHER plugin", body: [
                {type: 'listbox',
                    name: 'dataset',
                    label: 'dataset name',
                    'values': t.$cypher.datasets,
                    onselect: function (v) {
                        t.$cypher.res.dataset = this.value();
                        console.log('Value selected:', t.$cypher.res);
                    }
                },
                {type: "checkbox", name: "executable", label: "Is executable", checked: true},
                {type: "textbox", name: "code", label: "",
                    multiline: !0, minWidth: t.getParam("code_dialog_width", 600), minHeight: t.getParam("code_dialog_height", Math.min(tinymce.DOM.getViewPort().h - 200, 500))
                }
            ],
                onsubmit: function (e) {
                    t.$cypher.res.code = e.data.code.trim();
                    if (!t.$cypher.res.code.length) {
                        return;
                    }
                    $.post("/examples/add", t.$cypher.res, function (data) {
                        if (data.err) {
                            alert('Warning', JSON.stringify(data.err, null, 2));
                        } else {
                            t.insertContent(
                                "<br><div class='example' example-code>" +
                                    "<div class='example_code notranslate'>" + t.$cypher.res.code.replace(/\n/g, '<br>') +
                                    "</div><br>" +
                                    ((e.data.executable) ? ('<a target="_blank" class="tryitbtn" href="/query_plugin/execute?type=cypher&id=' + data.response[0].id + '">' + ((t.$cypher.lang == 'en') ? 'Try it yourself' : 'Выполнить') + ' »</a>') : "") +
                                    "</div>");
                            angular.element(document.getElementById('material-edit')).scope().saveChanges(true)
                        }
                    });
                }
            })
        }

    }}),
        t.addMenuItem("cypher", {text: "CYPHER plugin", context: "tools", onclick: function () {
            t.windowManager.open({title: "TinyMCE site", url: "http://www.tinymce.com", width: 800, height: 600, buttons: [
                {text: "Close", onclick: "close"}
            ]})
        }})
});
